// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SEC44NIPSS.Data;

namespace SEC44NIPSS.Data.Migrations
{
    [DbContext(typeof(NIPSSDbContext))]
    [Migration("20220920081801_df")]
    partial class df
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ActivityPlanner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MessageId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MessageId1")
                        .HasColumnType("int");

                    b.Property<int>("PlannerType")
                        .HasColumnType("int");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<int>("RecurrenceType")
                        .HasColumnType("int");

                    b.Property<int>("RecurrentNumber")
                        .HasColumnType("int");

                    b.Property<int>("ReminderTime")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId1");

                    b.HasIndex("ProfileId");

                    b.ToTable("ActivityPlanners");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Alumni", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralTopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alumnis");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuestionnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnerId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.AnswerList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Choose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RapidQuestionId")
                        .HasColumnType("bigint");

                    b.Property<int>("SN")
                        .HasColumnType("int");

                    b.Property<long>("UserAnswerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RapidQuestionId");

                    b.HasIndex("UserAnswerId");

                    b.ToTable("AnswerLists");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("NewsId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Committee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<long>("CommitteeCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("CommitteeCategoryId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.CommitteeCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.ToTable("CommitteeCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Replie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Replied")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.CurrentAffair", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrentAffairs");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.DirectingStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudyGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("StudyGroupId");

                    b.ToTable("DirectingStaffs");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<long>("DocumentCategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DontShow")
                        .HasColumnType("bit");

                    b.Property<long?>("EventId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Uploaded")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DocumentCategoryId");

                    b.HasIndex("EventId")
                        .IsUnique()
                        .HasFilter("[EventId] IS NOT NULL");

                    b.HasIndex("ProfileId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.DocumentCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.ToTable("DocumentCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.EmailSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("PX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reset")
                        .HasColumnType("bit");

                    b.Property<string>("SenderEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailSettings");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentStatus")
                        .HasColumnType("int");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<bool>("IsLecture")
                        .HasColumnType("bit");

                    b.Property<string>("Lecturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moderator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Executive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manifesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParticipantId")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Executive");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Gallery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DontShow")
                        .HasColumnType("bit");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseAsActivity")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.LegacyProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("C1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("D4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VotingType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LegacyProjects");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.LegacyProjectAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VotingType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LegacyProjectAnswers");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.LocalGoverment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LGAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StatesId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StatesId");

                    b.ToTable("LocalGoverments");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.MaintainaceSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FirstResponceTimeAfterSubmit")
                        .HasColumnType("int");

                    b.Property<int>("SecondResponceTimeAfterApproval")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaintainaceSettings");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ManagingStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ManagingStaffs");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationStatus")
                        .HasColumnType("int");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("Recipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<string>("SentVia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.News", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.NipssStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsExecutive")
                        .HasColumnType("bit");

                    b.Property<string>("Manifesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("SortOrder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("NipssStaff");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Notification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatetTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserToNotifyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserToNotifyId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Option", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LongNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LongNoteMaximumLength")
                        .HasColumnType("int");

                    b.Property<int>("LongNoteMinimumLength")
                        .HasColumnType("int");

                    b.Property<string>("MultipleOption1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultipleOption2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultipleOption3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultipleOption4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultipleOption5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultipleOption6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MultipleOption7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("No")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionList9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionType")
                        .HasColumnType("int");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShortNoteMaximumLength")
                        .HasColumnType("int");

                    b.Property<int>("ShortNoteMinimumLength")
                        .HasColumnType("int");

                    b.Property<string>("Table10Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table10Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table1Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table2Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table3Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table4Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table5Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table6Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table7Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table8Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Option9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table9Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Options");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ParlyReportCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParlyReportCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ParlyReportDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParlyReportCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParlyReportCategoryId");

                    b.HasIndex("ProfileId");

                    b.ToTable("ParlyReportDocuments");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ParticipantDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ParticipantDocumentCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParticipantId")
                        .HasColumnType("bigint");

                    b.Property<string>("Powerpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Script")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantDocumentCategoryId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("ParticipantDocuments");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ParticipantDocumentCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParticipantDocumentCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AltPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("ChangeDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DontShow")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsExecutive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParticipant")
                        .HasColumnType("bit");

                    b.Property<string>("LGA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficialRoleStatus")
                        .HasColumnType("int");

                    b.Property<string>("PXI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipanPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileHandler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProfileUpdateFirstTime")
                        .HasColumnType("bit");

                    b.Property<int>("ProfileUpdateLevel")
                        .HasColumnType("int");

                    b.Property<bool>("ProfileUpdatePictureFirstTime")
                        .HasColumnType("bit");

                    b.Property<bool>("PsChange")
                        .HasColumnType("bit");

                    b.Property<string>("PsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<string>("ShortProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Sponsor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyGroupRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("UserId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.Property<long>("QuestionnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Required")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnerId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.QuestionAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AnswerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("QuestionnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionnerId");

                    b.ToTable("QuestionAnswers");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.QuestionResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("QuestionAnswerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("QuestionAnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionResponses");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Questionner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddTimeFrame")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CloseTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Email")
                        .HasColumnType("int");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("PreviewImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendRespondantEmailAfterAttempt")
                        .HasColumnType("bit");

                    b.Property<bool>("SendResponse")
                        .HasColumnType("bit");

                    b.Property<string>("ShortLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowReSubmitBotton")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Questionners");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.QuestionnerPage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<long>("QuestionnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnerId");

                    b.ToTable("QuestionnerPages");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.RapidOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RapidQuestionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RapidQuestionId")
                        .IsUnique();

                    b.ToTable("RapidOption");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.RapidQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RapidQuestions");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.RapidTest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Instruction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RapidTest");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ReportAbuse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuestionnerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ReportAbuses");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecPaper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DocumentCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Powerpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Script")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("DocumentCategoryId");

                    b.ToTable("SecPapers");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecParticipant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudyGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("ProfileId")
                        .IsUnique()
                        .HasFilter("[ProfileId] IS NOT NULL");

                    b.HasIndex("StudyGroupId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId")
                        .IsUnique()
                        .HasFilter("[AlumniId] IS NOT NULL");

                    b.ToTable("secProjects");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecProjectExecutive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<long>("SecProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("SecProjectId");

                    b.ToTable("SecProjectExecutives");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Slider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.Property<long>("SliderCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("SliderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SliderCategoryId");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SliderCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SliderCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.State", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.StudyGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AKA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectingStaffOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectingStaffTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.ToTable("StudyGroups");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.StudyGroupMemeber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DS")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.Property<long>("StudyGroupId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.HasIndex("StudyGroupId");

                    b.ToTable("StudyGroupMemebers");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ApprovedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ApprovedByTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ClosedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ForwardedToId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ForwardedToTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseOfficeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("JobCompletionCertifiedById")
                        .HasColumnType("bigint");

                    b.Property<string>("JobCompletionCertifiedBySignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobCompletionCertifiedByTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteByReceivedAndPassTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteJobCompletionCertifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReceivedAndPassToId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReceivedAndPassToTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudyGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("ForwardedToId");

                    b.HasIndex("JobCompletionCertifiedById");

                    b.HasIndex("ReceivedAndPassToId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketRequirement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityIssued")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityRequired")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIVno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketItemStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketRequirements");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketResponse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketResponses");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketStaff", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketStaffStatus")
                        .HasColumnType("int");

                    b.Property<string>("WorkCarriedOut")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketStaff");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketStage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketStages");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketSubCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("TicketCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketCategoryId");

                    b.ToTable("TicketSubCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketSupervisor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("SendPhone")
                        .HasColumnType("bit");

                    b.Property<int>("Set")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TicketSupervisor");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Tour", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudyGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.HasIndex("StudyGroupId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TourCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AlumniId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlumniId");

                    b.ToTable("TourCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TourPost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostFileType")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TourPostTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("TourSubCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TourPostTypeId");

                    b.HasIndex("TourSubCategoryId");

                    b.ToTable("TourPosts");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TourPostType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TourPostTypes");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TourSubCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudyGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TourCategoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudyGroupId");

                    b.HasIndex("TourCategoryId");

                    b.ToTable("TourSubCategories");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.UserAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CombineCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<int>("QuestionNumber")
                        .HasColumnType("int");

                    b.Property<bool>("QuestionsLoaded")
                        .HasColumnType("bit");

                    b.Property<string>("Score")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.UserToNotify", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAndriod")
                        .HasColumnType("bit");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("UserToNotifys");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ActivityPlanner", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId1");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Answer", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Questionner", "Questionner")
                        .WithMany()
                        .HasForeignKey("QuestionnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.AnswerList", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.RapidQuestion", "RapidQuestion")
                        .WithMany()
                        .HasForeignKey("RapidQuestionId");

                    b.HasOne("SEC44NIPSS.Data.Model.UserAnswer", "UserAnswer")
                        .WithMany("AnswerLists")
                        .HasForeignKey("UserAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Comment", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Committee", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany()
                        .HasForeignKey("AlumniId");

                    b.HasOne("SEC44NIPSS.Data.Model.CommitteeCategory", "CommitteeCategory")
                        .WithMany("Committees")
                        .HasForeignKey("CommitteeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.CommitteeCategory", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("CommitteeCategory")
                        .HasForeignKey("AlumniId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.DirectingStaff", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("DirectingStaffs")
                        .HasForeignKey("AlumniId");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");

                    b.HasOne("SEC44NIPSS.Data.Model.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Document", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.DocumentCategory", "DocumentCategory")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEC44NIPSS.Data.Model.Event", "Event")
                        .WithOne("Document")
                        .HasForeignKey("SEC44NIPSS.Data.Model.Document", "EventId");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.DocumentCategory", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany()
                        .HasForeignKey("AlumniId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Executive", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("Executives")
                        .HasForeignKey("AlumniId");

                    b.HasOne("SEC44NIPSS.Data.Model.SecParticipant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Gallery", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany("MyGallery")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.LocalGoverment", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.State", "States")
                        .WithMany("LocalGov")
                        .HasForeignKey("StatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ManagingStaff", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("ManagingStaffs")
                        .HasForeignKey("AlumniId");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.NipssStaff", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Notification", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.UserToNotify", "UserToNotify")
                        .WithMany("Notifications")
                        .HasForeignKey("UserToNotifyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Option", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Question", "Question")
                        .WithOne("Options")
                        .HasForeignKey("SEC44NIPSS.Data.Model.Option", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ParlyReportDocument", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.ParlyReportCategory", "ParlyReportCategory")
                        .WithMany("ParlyReportDocuments")
                        .HasForeignKey("ParlyReportCategoryId");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.ParticipantDocument", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.ParticipantDocumentCategory", "ParticipantDocumentCategory")
                        .WithMany("ParticipantDocuments")
                        .HasForeignKey("ParticipantDocumentCategoryId");

                    b.HasOne("SEC44NIPSS.Data.Model.SecParticipant", "Participant")
                        .WithMany("ParticipantDocuments")
                        .HasForeignKey("ParticipantId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Profile", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("Profiles")
                        .HasForeignKey("AlumniId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Question", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Questionner", "Questionner")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.QuestionAnswer", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Answer", null)
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("AnswerId");

                    b.HasOne("SEC44NIPSS.Data.Model.Questionner", "Questionner")
                        .WithMany()
                        .HasForeignKey("QuestionnerId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.QuestionResponse", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.QuestionAnswer", null)
                        .WithMany("QuestionResponses")
                        .HasForeignKey("QuestionAnswerId");

                    b.HasOne("SEC44NIPSS.Data.Model.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Questionner", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.QuestionnerPage", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Questionner", "Questionner")
                        .WithMany("QuestionnerPages")
                        .HasForeignKey("QuestionnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.RapidOption", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.RapidQuestion", "RapidQuestion")
                        .WithOne("RapidOptions")
                        .HasForeignKey("SEC44NIPSS.Data.Model.RapidOption", "RapidQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecPaper", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("SecPapers")
                        .HasForeignKey("AlumniId");

                    b.HasOne("SEC44NIPSS.Data.Model.DocumentCategory", "DocumentCategory")
                        .WithMany("SecPapers")
                        .HasForeignKey("DocumentCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecParticipant", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("Participants")
                        .HasForeignKey("AlumniId");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithOne("Participant")
                        .HasForeignKey("SEC44NIPSS.Data.Model.SecParticipant", "ProfileId");

                    b.HasOne("SEC44NIPSS.Data.Model.StudyGroup", "StudyGroup")
                        .WithMany("SecParticipants")
                        .HasForeignKey("StudyGroupId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecProject", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithOne("SecProject")
                        .HasForeignKey("SEC44NIPSS.Data.Model.SecProject", "AlumniId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.SecProjectExecutive", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEC44NIPSS.Data.Model.SecProject", "SecProject")
                        .WithMany("SecProjectExecutives")
                        .HasForeignKey("SecProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Slider", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.SliderCategory", "SliderCategory")
                        .WithMany("Sliders")
                        .HasForeignKey("SliderCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.StudyGroup", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("StudyGroup")
                        .HasForeignKey("AlumniId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.StudyGroupMemeber", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithOne("StudyGroupMemeber")
                        .HasForeignKey("SEC44NIPSS.Data.Model.StudyGroupMemeber", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEC44NIPSS.Data.Model.StudyGroup", "StudyGroup")
                        .WithMany("StudyGroupMemebers")
                        .HasForeignKey("StudyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Ticket", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "ForwardedTo")
                        .WithMany()
                        .HasForeignKey("ForwardedToId");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "JobCompletionCertifiedBy")
                        .WithMany()
                        .HasForeignKey("JobCompletionCertifiedById");

                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "ReceivedAndPassTo")
                        .WithMany()
                        .HasForeignKey("ReceivedAndPassToId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketRequirement", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Ticket", "Ticket")
                        .WithMany("TicketRequirements")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketResponse", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEC44NIPSS.Data.Model.Ticket", "Ticket")
                        .WithMany("TicketResponses")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketStaff", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEC44NIPSS.Data.Model.Ticket", "Ticket")
                        .WithMany("TicketStaff")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketStage", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Ticket", "Ticket")
                        .WithMany("TicketStages")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TicketSubCategory", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.TicketCategory", "TicketCategory")
                        .WithMany("TicketSubCategories")
                        .HasForeignKey("TicketCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.Tour", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("Tours")
                        .HasForeignKey("AlumniId");

                    b.HasOne("SEC44NIPSS.Data.Model.StudyGroup", "StudyGroup")
                        .WithMany("Tours")
                        .HasForeignKey("StudyGroupId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TourCategory", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Alumni", "Alumni")
                        .WithMany("TourCategories")
                        .HasForeignKey("AlumniId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TourPost", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.TourPostType", "TourPostType")
                        .WithMany("TourPosts")
                        .HasForeignKey("TourPostTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SEC44NIPSS.Data.Model.TourSubCategory", "TourSubCategory")
                        .WithMany("TourPosts")
                        .HasForeignKey("TourSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.TourSubCategory", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.StudyGroup", "StudyGroup")
                        .WithMany("TourSubCategory")
                        .HasForeignKey("StudyGroupId");

                    b.HasOne("SEC44NIPSS.Data.Model.TourCategory", "TourCategory")
                        .WithMany("TourSubCategories")
                        .HasForeignKey("TourCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.UserAnswer", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("SEC44NIPSS.Data.Model.UserToNotify", b =>
                {
                    b.HasOne("SEC44NIPSS.Data.Model.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });
#pragma warning restore 612, 618
        }
    }
}
